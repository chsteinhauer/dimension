{
  "$schema": "https://turborepo.org/schema.json",
  //
  // @todo As we're currently using process.env["..."] to access our environment
  // variables, then we must have access to them during build time.
  // Once we migrate to configRefs, then such variables aren't required during
  // build time, and as such we will be able to return to a strict envMode.
  //
  "envMode": "loose",
  "globalEnv": ["NODE_ENV", "APP_ENV", "APP_VERSION"],
  "tasks": {
    //
    // BUILD
    //
    // in order to maximize build performance, we want scripts to run in
    // parallel whenever possible, which is generally not a problem with the
    // package structure
    //
    // we do however have a few layers in which the packages MUST be built in
    // order, in order for dependencies to be correctly resolved at build time
    //
    // these layers includes:
    //
    // 1) apps (which relies on all dependencies being built prior to bundling)
    // 2) libs (which can generally be built in parallel, but in case of linaria
    //          we have some hard dependencies in order to be able to extract
    //          correct css)
    // 3) core (which contains the dependencies that must be built for linaria
    //          to be able to build correctly)
    //
    // the achieve this, we've separated build scripts into three distinct turbo
    // pipelines (namely build:app, build and build:linaria-deps) that only
    // depend on strictly required build scripts, so that we can consistently
    // rely on the build script to complete in expected order, while maximizing
    // parallelization of the build process
    //
    // as a developer you should only ever run the build script, as that will
    // automatically trigger the build:linaria-deps scripts as needed
    //
    "build:app": {
      "dependsOn": ["^build:linaria-deps", "^build"],
      "outputs": ["lib/**", ".next/**", "!.next/cache/**"],
      "inputs": ["rollup.config.js", "src/**"],
      "outputLogs": "new-only"
    },
    "build": {
      "dependsOn": ["^build:linaria-deps"],
      "outputs": ["lib/**", ".next/**", "!.next/cache/**"],
      "inputs": ["rollup.config.js", "src/**"],
      "outputLogs": "new-only"
    },
    "build:linaria-deps": {
      "dependsOn": ["^build:linaria-deps"],
      "outputs": ["lib/**"],
      "inputs": ["rollup.config.js", "src/**"],
      "outputLogs": "new-only"
    },

    //
    // DEV
    //
    "dev:app": {
      "persistent": true,
      "cache": false
    },
    "dev": {
      "persistent": true,
      "cache": false
    },

    //
    // LINT + TEST
    //
    // all of our code analysis tools support built-in caching, which will allow
    // more fine-grained caching instead of hit/miss on the package-level as
    // turborepo ships with, so we prefer their built-in caching
    //
    "stylelint": {
      "cache": false
    },
    "eslint": {
      "cache": false
    },
    "type-check": {
      "cache": false
    }
  }
}
